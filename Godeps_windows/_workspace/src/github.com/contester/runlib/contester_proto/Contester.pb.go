// Code generated by protoc-gen-go.
// source: Contester.proto
// DO NOT EDIT!

package contester_proto

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type Compilation_Code int32

const (
	Compilation_Success Compilation_Code = 1
	Compilation_Failure Compilation_Code = 2
)

var Compilation_Code_name = map[int32]string{
	1: "Success",
	2: "Failure",
}
var Compilation_Code_value = map[string]int32{
	"Success": 1,
	"Failure": 2,
}

func (x Compilation_Code) Enum() *Compilation_Code {
	p := new(Compilation_Code)
	*p = x
	return p
}
func (x Compilation_Code) String() string {
	return proto.EnumName(Compilation_Code_name, int32(x))
}
func (x Compilation_Code) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *Compilation_Code) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Compilation_Code_value, data, "Compilation_Code")
	if err != nil {
		return err
	}
	*x = Compilation_Code(value)
	return nil
}

type Compilation struct {
	Failure          *bool                 `protobuf:"varint,1,opt,name=failure" json:"failure,omitempty"`
	ResultSteps      []*Compilation_Result `protobuf:"bytes,2,rep,name=result_steps" json:"result_steps,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *Compilation) Reset()         { *m = Compilation{} }
func (m *Compilation) String() string { return proto.CompactTextString(m) }
func (*Compilation) ProtoMessage()    {}

func (m *Compilation) GetFailure() bool {
	if m != nil && m.Failure != nil {
		return *m.Failure
	}
	return false
}

func (m *Compilation) GetResultSteps() []*Compilation_Result {
	if m != nil {
		return m.ResultSteps
	}
	return nil
}

type Compilation_Result struct {
	StepName         *string         `protobuf:"bytes,1,opt,name=step_name" json:"step_name,omitempty"`
	Execution        *LocalExecution `protobuf:"bytes,2,opt,name=execution" json:"execution,omitempty"`
	Failure          *bool           `protobuf:"varint,3,opt,name=failure" json:"failure,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Compilation_Result) Reset()         { *m = Compilation_Result{} }
func (m *Compilation_Result) String() string { return proto.CompactTextString(m) }
func (*Compilation_Result) ProtoMessage()    {}

func (m *Compilation_Result) GetStepName() string {
	if m != nil && m.StepName != nil {
		return *m.StepName
	}
	return ""
}

func (m *Compilation_Result) GetExecution() *LocalExecution {
	if m != nil {
		return m.Execution
	}
	return nil
}

func (m *Compilation_Result) GetFailure() bool {
	if m != nil && m.Failure != nil {
		return *m.Failure
	}
	return false
}

func init() {
	proto.RegisterEnum("contester.proto.Compilation_Code", Compilation_Code_name, Compilation_Code_value)
}
