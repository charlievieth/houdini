// Code generated by protoc-gen-go.
// source: Blobs.proto
// DO NOT EDIT!

package contester_proto

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type Blob_CompressionInfo_CompressionType int32

const (
	Blob_CompressionInfo_METHOD_NONE Blob_CompressionInfo_CompressionType = 0
	Blob_CompressionInfo_METHOD_ZLIB Blob_CompressionInfo_CompressionType = 1
)

var Blob_CompressionInfo_CompressionType_name = map[int32]string{
	0: "METHOD_NONE",
	1: "METHOD_ZLIB",
}
var Blob_CompressionInfo_CompressionType_value = map[string]int32{
	"METHOD_NONE": 0,
	"METHOD_ZLIB": 1,
}

func (x Blob_CompressionInfo_CompressionType) Enum() *Blob_CompressionInfo_CompressionType {
	p := new(Blob_CompressionInfo_CompressionType)
	*p = x
	return p
}
func (x Blob_CompressionInfo_CompressionType) String() string {
	return proto.EnumName(Blob_CompressionInfo_CompressionType_name, int32(x))
}
func (x Blob_CompressionInfo_CompressionType) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *Blob_CompressionInfo_CompressionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Blob_CompressionInfo_CompressionType_value, data, "Blob_CompressionInfo_CompressionType")
	if err != nil {
		return err
	}
	*x = Blob_CompressionInfo_CompressionType(value)
	return nil
}

type Blob struct {
	Data             []byte                `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Compression      *Blob_CompressionInfo `protobuf:"bytes,2,opt,name=compression" json:"compression,omitempty"`
	Sha1             []byte                `protobuf:"bytes,3,opt,name=sha1" json:"sha1,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *Blob) Reset()         { *m = Blob{} }
func (m *Blob) String() string { return proto.CompactTextString(m) }
func (*Blob) ProtoMessage()    {}

func (m *Blob) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Blob) GetCompression() *Blob_CompressionInfo {
	if m != nil {
		return m.Compression
	}
	return nil
}

func (m *Blob) GetSha1() []byte {
	if m != nil {
		return m.Sha1
	}
	return nil
}

type Blob_CompressionInfo struct {
	Method           *Blob_CompressionInfo_CompressionType `protobuf:"varint,1,opt,name=method,enum=contester.proto.Blob_CompressionInfo_CompressionType" json:"method,omitempty"`
	OriginalSize     *uint32                               `protobuf:"varint,2,opt,name=original_size" json:"original_size,omitempty"`
	XXX_unrecognized []byte                                `json:"-"`
}

func (m *Blob_CompressionInfo) Reset()         { *m = Blob_CompressionInfo{} }
func (m *Blob_CompressionInfo) String() string { return proto.CompactTextString(m) }
func (*Blob_CompressionInfo) ProtoMessage()    {}

func (m *Blob_CompressionInfo) GetMethod() Blob_CompressionInfo_CompressionType {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return 0
}

func (m *Blob_CompressionInfo) GetOriginalSize() uint32 {
	if m != nil && m.OriginalSize != nil {
		return *m.OriginalSize
	}
	return 0
}

type Module struct {
	Name             *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Data             *Blob   `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	Type             *string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Module) Reset()         { *m = Module{} }
func (m *Module) String() string { return proto.CompactTextString(m) }
func (*Module) ProtoMessage()    {}

func (m *Module) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Module) GetData() *Blob {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Module) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

type FileBlob struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Data             *Blob   `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FileBlob) Reset()         { *m = FileBlob{} }
func (m *FileBlob) String() string { return proto.CompactTextString(m) }
func (*FileBlob) ProtoMessage()    {}

func (m *FileBlob) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *FileBlob) GetData() *Blob {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("contester.proto.Blob_CompressionInfo_CompressionType", Blob_CompressionInfo_CompressionType_name, Blob_CompressionInfo_CompressionType_value)
}
